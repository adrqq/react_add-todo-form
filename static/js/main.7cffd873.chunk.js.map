{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","todo","user","className","classNames","href","TodoList","todos","users","map","find","App","useState","todosFromServer","setTodos","selectedUserId","setSelectedUserId","newTodoTitle","setNewTodoTitle","errorVisiableUser","setErrorVisiableUser","errorVisiableTitle","setErrorVisiableTitle","onSubmit","event","preventDefault","length","type","placeholder","value","trim","onChange","target","Number","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cffd873.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 51,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo, User } from '../../types';\n\ntype Props = {\n  todo: Todo;\n  user: User | undefined;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  return (\n    <>\n      <article\n        data-id=\"1\"\n        className={classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': todo.completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {todo.title}\n        </h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n          {user ? user.name : 'Unknown user'}\n        </a>\n      </article>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { User, Todo } from '../../types';\n\ntype Props = {\n  users: User[];\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          user={users.find(user => user.id === todo.userId)}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [errorVisiableUser, setErrorVisiableUser] = useState(false);\n  const [errorVisiableTitle, setErrorVisiableTitle] = useState(false);\n\n  const handleSuccess = (userId: number) => {\n    if (userId !== 0 && newTodoTitle !== '') {\n      setTodos([\n        ...todos,\n        {\n          userId,\n          id: todos.length + 1,\n          title: newTodoTitle,\n          completed: false,\n        },\n      ]);\n\n      setSelectedUserId(0);\n      setNewTodoTitle('');\n    }\n\n    if (userId === 0) {\n      setErrorVisiableUser(true);\n    } else {\n      setErrorVisiableUser(false);\n    }\n\n    if (newTodoTitle === '') {\n      setErrorVisiableTitle(true);\n    } else {\n      setErrorVisiableTitle(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        handleSuccess(selectedUserId);\n      }}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter todo title\"\n            value={newTodoTitle.trim()}\n            onChange={(event) => {\n              setNewTodoTitle(event.target.value);\n            }}\n          />\n          {errorVisiableTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={(event) => {\n              setSelectedUserId(Number(event.target.value));\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {errorVisiableUser && (\n            <span className=\"error\">Please chose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList users={usersFromServer} todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}